{
  "memcached": {
    "commandTimings": {
      "opcodes": [
        "GET",
        "SET",
        "ADD",
        "REPLACE",
        "DELETE",
        "INCREMENT",
        "DECREMENT",
        "FLUSH",
        "STAT",
        "GET_META",
        "SET_WITH_META",
        "ADD_WITH_META",
        "DELETE_WITH_META",
        "SET_VBUCKET"
      ],
      "resampleBuckets": [
        0.000001,
        0.000002,
        0.000004,
        0.000008,
        0.000016,
        0.000032,
        0.000064,
        0.000128,
        0.000256,
        0.000512,
        0.001024,
        0.002048,
        0.004096,
        0.008192,
        0.016384,
        0.032768,
        0.065536,
        0.131072,
        0.262144,
        0.524288,
        1.048576,
        2.097152,
        4.194304,
        8.388608,
        16.777216,
        33.554432,
        65.011712
      ]
    },
    "stats": {
      "kv_vb_checkpoint_memory_bytes": {
        "group": "",
        "pattern": "^vb_(?P<state>.+?)_checkpoint_memory$",
        "labels": [
          "bucket",
          "state"
        ]
      },
      "kv_vb_checkpoint_memory_overhead_bytes": {
        "group": "",
        "pattern": "^vb_(?P<state>.+?)_checkpoint_memory_overhead$",
        "labels": [
          "bucket",
          "state"
        ]
      },
      "kv_vb_checkpoint_memory_unreferenced_bytes": {
        "group": "",
        "pattern": "^vb_(?P<state>.+?)_checkpoint_memory_unreferenced$",
        "labels": [
          "bucket",
          "state"
        ]
      },
      "kv_vb_itm_memory_bytes": {
        "group": "",
        "pattern": "^vb_(?P<state>.+?)_itm_memory$",
        "labels": [
          "bucket",
          "state"
        ]
      },
      "kv_num_vbuckets": {
        "group": "",
        "pattern": "^vb_(?P<state>.+?)_num$",
        "labels": [
          "bucket",
          "state"
        ]
      },
      "kv_curr_items": {
        "group": "",
        "pattern": "^curr_items$",
        "labels": [
          "bucket"
        ]
      },
      "kv_dcp_items_remaining": {
        "group": "dcpagg :",
        "pattern": "^(?P<connection_type>[^:]*):items_remaining$",
        "labels":  [
          "bucket",
          "connection_type"
        ]
      },
      "kv_dcp_items_sent": {
        "group": "dcpagg :",
        "pattern": "^(?P<connection_type>[^:]*):items_sent$",
        "labels":  [
          "bucket",
          "connection_type"
        ]
      },
      "kv_dcp_backoff": {
        "group": "dcpagg :",
        "pattern": "^(?P<connection_type>[^:]*):backoff$",
        "labels":  [
          "bucket",
          "connection_type"
        ]
      },
      "kv_dcp_producer_count": {
        "group": "dcpagg :",
        "pattern": "^(?P<connection_type>[^:]*):producer_count$",
        "labels":  [
          "bucket",
          "connection_type"
        ]
      },
      "kv_dcp_total_data_size_bytes": {
        "group": "dcpagg :",
        "pattern": "^(?P<connection_type>[^:]*):total_bytes$",
        "labels":  [
          "bucket",
          "connection_type"
        ]
      },
      "kv_dcp_total_uncompressed_data_size_bytes": {
        "group": "dcpagg :",
        "pattern": "^(?P<connection_type>[^:]*):total_uncompressed_data_size$",
        "labels":  [
          "bucket",
          "connection_type"
        ]
      },
      "kv_curr_connections": {
        "group": "",
        "pattern": "^curr_connections$",
        "singleton": true
      },
      "kv_daemon_connections": {
        "group": "",
        "pattern": "^daemon_connections$",
        "singleton": true
      },
      "kv_system_connections": {
        "group": "",
        "pattern": "^system_connections$",
        "singleton": true
      },
      "kv_total_connections": {
        "group": "",
        "pattern": "^total_connections$",
        "singleton": true
      },
      "kv_collection_mem_used_bytes": {
        "group": "",
        "pattern": "^mem_used$",
        "labels": [
          "bucket",
          "scope",
          "collection"
        ]
      },
      "kv_uptime_seconds": {
        "group": "",
        "pattern": "^uptime$",
        "labels": [],
        "singleton": true
      },
      "kv_auth_cmds": {"group":"", "pattern": "^auth_cmds$", "labels": ["bucket"]},
      "kv_auth_errors": {"group":"", "pattern": "^auth_errors$", "labels": ["bucket"]},
      "kv_cmd_lookup": {"group":"", "pattern": "^cmd_lookup$", "labels": ["bucket"]},
      "kv_cmd_mutation": {"group":"", "pattern": "^cmd_mutation$", "labels": ["bucket"]},
      "kv_conn_yields": {"group":"", "pattern": "^conn_yields$", "labels": ["bucket"]},
      "kv_connection_structures": {"group":"", "pattern": "^connection_structures$", "labels": [], "singleton": true},
      "kv_curr_items_tot": {"group":"", "pattern": "^curr_items_tot$", "labels": ["bucket"]},
      "kv_curr_temp_items": {"group":"", "pattern": "^curr_temp_items$", "labels": ["bucket"]},
      "kv_ep_access_scanner_num_items": {"group":"", "pattern": "^ep_access_scanner_num_items$", "labels": ["bucket"]},
      "kv_ep_alog_block_size": {"group":"", "pattern": "^ep_alog_block_size$", "labels": ["bucket"]},
      "kv_ep_alog_max_stored_items": {"group":"", "pattern": "^ep_alog_max_stored_items$", "labels": ["bucket"]},
      "kv_ep_alog_resident_ratio_threshold": {"group":"", "pattern": "^ep_alog_resident_ratio_threshold$", "labels": ["bucket"]},
      "kv_ep_alog_sleep_time": {"group":"", "pattern": "^ep_alog_sleep_time$", "labels": ["bucket"]},
      "kv_ep_alog_task_time": {"group":"", "pattern": "^ep_alog_task_time$", "labels": ["bucket"]},
      "kv_ep_backfill_mem_threshold": {"group":"", "pattern": "^ep_backfill_mem_threshold$", "labels": ["bucket"]},
      "kv_ep_bfilter_fp_prob": {"group":"", "pattern": "^ep_bfilter_fp_prob$", "labels": ["bucket"]},
      "kv_ep_bfilter_key_count": {"group":"", "pattern": "^ep_bfilter_key_count$", "labels": ["bucket"]},
      "kv_ep_bfilter_residency_threshold": {"group":"", "pattern": "^ep_bfilter_residency_threshold$", "labels": ["bucket"]},
      "kv_ep_bg_fetched": {"group":"", "pattern": "^ep_bg_fetched$", "labels": ["bucket"]},
      "kv_ep_bg_meta_fetched": {"group":"", "pattern": "^ep_bg_meta_fetched$", "labels": ["bucket"]},
      "kv_ep_bg_remaining_items": {"group":"", "pattern": "^ep_bg_remaining_items$", "labels": ["bucket"]},
      "kv_ep_bg_remaining_jobs": {"group":"", "pattern": "^ep_bg_remaining_jobs$", "labels": ["bucket"]},
      "kv_ep_blob_num": {"group":"", "pattern": "^ep_blob_num$", "labels": ["bucket"]},
      "kv_ep_cache_size": {"group":"", "pattern": "^ep_cache_size$", "labels": ["bucket"]},
      "kv_ep_chk_max_items": {"group":"", "pattern": "^ep_chk_max_items$", "labels": ["bucket"]},
      "kv_ep_chk_period": {"group":"", "pattern": "^ep_chk_period$", "labels": ["bucket"]},
      "kv_ep_chk_persistence_remains": {"group":"", "pattern": "^ep_chk_persistence_remains$", "labels": ["bucket"]},
      "kv_ep_chk_remover_stime": {"group":"", "pattern": "^ep_chk_remover_stime$", "labels": ["bucket"]},
      "kv_ep_clock_cas_drift_threshold_exceeded": {"group":"", "pattern": "^ep_clock_cas_drift_threshold_exceeded$", "labels": ["bucket"]},
      "kv_ep_collections_drop_compaction_delay": {"group":"", "pattern": "^ep_collections_drop_compaction_delay$", "labels": ["bucket"]},
      "kv_ep_commit_num": {"group":"", "pattern": "^ep_commit_num$", "labels": ["bucket"]},
      "kv_ep_compaction_exp_mem_threshold": {"group":"", "pattern": "^ep_compaction_exp_mem_threshold$", "labels": ["bucket"]},
      "kv_ep_compaction_write_queue_cap": {"group":"", "pattern": "^ep_compaction_write_queue_cap$", "labels": ["bucket"]},
      "kv_ep_connection_manager_interval": {"group":"", "pattern": "^ep_connection_manager_interval$", "labels": ["bucket"]},
      "kv_ep_couchstore_file_cache_max_size": {"group":"", "pattern": "^ep_couchstore_file_cache_max_size$", "labels": ["bucket"]},
      "kv_ep_cursor_dropping_checkpoint_mem_lower_mark": {"group":"", "pattern": "^ep_cursor_dropping_checkpoint_mem_lower_mark$", "labels": ["bucket"]},
      "kv_ep_cursor_dropping_checkpoint_mem_upper_mark": {"group":"", "pattern": "^ep_cursor_dropping_checkpoint_mem_upper_mark$", "labels": ["bucket"]},
      "kv_ep_cursor_dropping_lower_mark": {"group":"", "pattern": "^ep_cursor_dropping_lower_mark$", "labels": ["bucket"]},
      "kv_ep_cursor_dropping_upper_mark": {"group":"", "pattern": "^ep_cursor_dropping_upper_mark$", "labels": ["bucket"]},
      "kv_ep_cursors_dropped": {"group":"", "pattern": "^ep_cursors_dropped$", "labels": ["bucket"]},
      "kv_ep_data_read_failed": {"group":"", "pattern": "^ep_data_read_failed$", "labels": ["bucket"]},
      "kv_ep_data_write_failed": {"group":"", "pattern": "^ep_data_write_failed$", "labels": ["bucket"]},
      "kv_ep_dcp_backfill_byte_limit": {"group":"", "pattern": "^ep_dcp_backfill_byte_limit$", "labels": ["bucket"]},
      "kv_ep_dcp_conn_buffer_size": {"group":"", "pattern": "^ep_dcp_conn_buffer_size$", "labels": ["bucket"]},
      "kv_ep_dcp_conn_buffer_size_aggr_mem_threshold": {"group":"", "pattern": "^ep_dcp_conn_buffer_size_aggr_mem_threshold$", "labels": ["bucket"]},
      "kv_ep_dcp_conn_buffer_size_aggressive_perc": {"group":"", "pattern": "^ep_dcp_conn_buffer_size_aggressive_perc$", "labels": ["bucket"]},
      "kv_ep_dcp_conn_buffer_size_max": {"group":"", "pattern": "^ep_dcp_conn_buffer_size_max$", "labels": ["bucket"]},
      "kv_ep_dcp_conn_buffer_size_perc": {"group":"", "pattern": "^ep_dcp_conn_buffer_size_perc$", "labels": ["bucket"]},
      "kv_ep_dcp_consumer_process_buffered_messages_batch_size": {"group":"", "pattern": "^ep_dcp_consumer_process_buffered_messages_batch_size$", "labels": ["bucket"]},
      "kv_ep_dcp_consumer_process_buffered_messages_yield_limit": {"group":"", "pattern": "^ep_dcp_consumer_process_buffered_messages_yield_limit$", "labels": ["bucket"]},
      "kv_ep_dcp_idle_timeout": {"group":"", "pattern": "^ep_dcp_idle_timeout$", "labels": ["bucket"]},
      "kv_ep_dcp_min_compression_ratio": {"group":"", "pattern": "^ep_dcp_min_compression_ratio$", "labels": ["bucket"]},
      "kv_ep_dcp_noop_tx_interval": {"group":"", "pattern": "^ep_dcp_noop_tx_interval$", "labels": ["bucket"]},
      "kv_ep_dcp_producer_snapshot_marker_yield_limit": {"group":"", "pattern": "^ep_dcp_producer_snapshot_marker_yield_limit$", "labels": ["bucket"]},
      "kv_ep_dcp_scan_byte_limit": {"group":"", "pattern": "^ep_dcp_scan_byte_limit$", "labels": ["bucket"]},
      "kv_ep_dcp_scan_item_limit": {"group":"", "pattern": "^ep_dcp_scan_item_limit$", "labels": ["bucket"]},
      "kv_ep_dcp_takeover_max_time": {"group":"", "pattern": "^ep_dcp_takeover_max_time$", "labels": ["bucket"]},
      "kv_ep_defragmenter_age_threshold": {"group":"", "pattern": "^ep_defragmenter_age_threshold$", "labels": ["bucket"]},
      "kv_ep_defragmenter_auto_lower_threshold": {"group":"", "pattern": "^ep_defragmenter_auto_lower_threshold$", "labels": ["bucket"]},
      "kv_ep_defragmenter_auto_max_sleep": {"group":"", "pattern": "^ep_defragmenter_auto_max_sleep$", "labels": ["bucket"]},
      "kv_ep_defragmenter_auto_min_sleep": {"group":"", "pattern": "^ep_defragmenter_auto_min_sleep$", "labels": ["bucket"]},
      "kv_ep_defragmenter_auto_pid_d": {"group":"", "pattern": "^ep_defragmenter_auto_pid_d$", "labels": ["bucket"]},
      "kv_ep_defragmenter_auto_pid_dt": {"group":"", "pattern": "^ep_defragmenter_auto_pid_dt$", "labels": ["bucket"]},
      "kv_ep_defragmenter_auto_pid_i": {"group":"", "pattern": "^ep_defragmenter_auto_pid_i$", "labels": ["bucket"]},
      "kv_ep_defragmenter_auto_pid_p": {"group":"", "pattern": "^ep_defragmenter_auto_pid_p$", "labels": ["bucket"]},
      "kv_ep_defragmenter_auto_upper_threshold": {"group":"", "pattern": "^ep_defragmenter_auto_upper_threshold$", "labels": ["bucket"]},
      "kv_ep_defragmenter_chunk_duration": {"group":"", "pattern": "^ep_defragmenter_chunk_duration$", "labels": ["bucket"]},
      "kv_ep_defragmenter_interval": {"group":"", "pattern": "^ep_defragmenter_interval$", "labels": ["bucket"]},
      "kv_ep_defragmenter_num_moved": {"group":"", "pattern": "^ep_defragmenter_num_moved$", "labels": ["bucket"]},
      "kv_ep_defragmenter_num_visited": {"group":"", "pattern": "^ep_defragmenter_num_visited$", "labels": ["bucket"]},
      "kv_ep_defragmenter_stored_value_age_threshold": {"group":"", "pattern": "^ep_defragmenter_stored_value_age_threshold$", "labels": ["bucket"]},
      "kv_ep_defragmenter_sv_num_moved": {"group":"", "pattern": "^ep_defragmenter_sv_num_moved$", "labels": ["bucket"]},
      "kv_ep_diskqueue_drain": {"group":"", "pattern": "^ep_diskqueue_drain$", "labels": ["bucket"]},
      "kv_ep_diskqueue_fill": {"group":"", "pattern": "^ep_diskqueue_fill$", "labels": ["bucket"]},
      "kv_ep_diskqueue_items": {"group":"", "pattern": "^ep_diskqueue_items$", "labels": ["bucket"]},
      "kv_ep_diskqueue_pending": {"group":"", "pattern": "^ep_diskqueue_pending$", "labels": ["bucket"]},
      "kv_ep_durability_timeout_task_interval": {"group":"", "pattern": "^ep_durability_timeout_task_interval$", "labels": ["bucket"]},
      "kv_ep_exp_pager_stime": {"group":"", "pattern": "^ep_exp_pager_stime$", "labels": ["bucket"]},
      "kv_ep_expired_access": {"group":"", "pattern": "^ep_expired_access$", "labels": ["bucket"]},
      "kv_ep_expired_compactor": {"group":"", "pattern": "^ep_expired_compactor$", "labels": ["bucket"]},
      "kv_ep_expired_pager": {"group":"", "pattern": "^ep_expired_pager$", "labels": ["bucket"]},
      "kv_ep_flusher_todo": {"group":"", "pattern": "^ep_flusher_todo$", "labels": ["bucket"]},
      "kv_ep_flusher_total_batch_limit": {"group":"", "pattern": "^ep_flusher_total_batch_limit$", "labels": ["bucket"]},
      "kv_ep_fsync_after_every_n_bytes_written": {"group":"", "pattern": "^ep_fsync_after_every_n_bytes_written$", "labels": ["bucket"]},
      "kv_ep_getl_default_timeout": {"group":"", "pattern": "^ep_getl_default_timeout$", "labels": ["bucket"]},
      "kv_ep_getl_max_timeout": {"group":"", "pattern": "^ep_getl_max_timeout$", "labels": ["bucket"]},
      "kv_ep_hlc_drift_ahead_threshold_us": {"group":"", "pattern": "^ep_hlc_drift_ahead_threshold_us$", "labels": ["bucket"]},
      "kv_ep_hlc_drift_behind_threshold_us": {"group":"", "pattern": "^ep_hlc_drift_behind_threshold_us$", "labels": ["bucket"]},
      "kv_ep_ht_locks": {"group":"", "pattern": "^ep_ht_locks$", "labels": ["bucket"]},
      "kv_ep_ht_resize_interval": {"group":"", "pattern": "^ep_ht_resize_interval$", "labels": ["bucket"]},
      "kv_ep_ht_size": {"group":"", "pattern": "^ep_ht_size$", "labels": ["bucket"]},
      "kv_ep_io_bg_fetch_read_count": {"group":"", "pattern": "^ep_io_bg_fetch_read_count$", "labels": ["bucket"]},
      "kv_ep_item_begin_failed": {"group":"", "pattern": "^ep_item_begin_failed$", "labels": ["bucket"]},
      "kv_ep_item_commit_failed": {"group":"", "pattern": "^ep_item_commit_failed$", "labels": ["bucket"]},
      "kv_ep_item_compressor_chunk_duration": {"group":"", "pattern": "^ep_item_compressor_chunk_duration$", "labels": ["bucket"]},
      "kv_ep_item_compressor_interval": {"group":"", "pattern": "^ep_item_compressor_interval$", "labels": ["bucket"]},
      "kv_ep_item_compressor_num_compressed": {"group":"", "pattern": "^ep_item_compressor_num_compressed$", "labels": ["bucket"]},
      "kv_ep_item_compressor_num_visited": {"group":"", "pattern": "^ep_item_compressor_num_visited$", "labels": ["bucket"]},
      "kv_ep_item_eviction_age_percentage": {"group":"", "pattern": "^ep_item_eviction_age_percentage$", "labels": ["bucket"]},
      "kv_ep_item_eviction_freq_counter_age_threshold": {"group":"", "pattern": "^ep_item_eviction_freq_counter_age_threshold$", "labels": ["bucket"]},
      "kv_ep_item_flush_expired": {"group":"", "pattern": "^ep_item_flush_expired$", "labels": ["bucket"]},
      "kv_ep_item_flush_failed": {"group":"", "pattern": "^ep_item_flush_failed$", "labels": ["bucket"]},
      "kv_ep_item_freq_decayer_chunk_duration": {"group":"", "pattern": "^ep_item_freq_decayer_chunk_duration$", "labels": ["bucket"]},
      "kv_ep_item_freq_decayer_percent": {"group":"", "pattern": "^ep_item_freq_decayer_percent$", "labels": ["bucket"]},
      "kv_ep_item_num": {"group":"", "pattern": "^ep_item_num$", "labels": ["bucket"]},
      "kv_ep_items_expelled_from_checkpoints": {"group":"", "pattern": "^ep_items_expelled_from_checkpoints$", "labels": ["bucket"]},
      "kv_ep_items_rm_from_checkpoints": {"group":"", "pattern": "^ep_items_rm_from_checkpoints$", "labels": ["bucket"]},
      "kv_ep_magma_bloom_filter_accuracy": {"group":"", "pattern": "^ep_magma_bloom_filter_accuracy$", "labels": ["bucket"]},
      "kv_ep_magma_bloom_filter_accuracy_for_bottom_level": {"group":"", "pattern": "^ep_magma_bloom_filter_accuracy_for_bottom_level$", "labels": ["bucket"]},
      "kv_ep_magma_checkpoint_interval": {"group":"", "pattern": "^ep_magma_checkpoint_interval$", "labels": ["bucket"]},
      "kv_ep_magma_checkpoint_threshold": {"group":"", "pattern": "^ep_magma_checkpoint_threshold$", "labels": ["bucket"]},
      "kv_ep_magma_delete_frag_ratio": {"group":"", "pattern": "^ep_magma_delete_frag_ratio$", "labels": ["bucket"]},
      "kv_ep_magma_delete_memtable_writecache": {"group":"", "pattern": "^ep_magma_delete_memtable_writecache$", "labels": ["bucket"]},
      "kv_ep_magma_expiry_frag_threshold": {"group":"", "pattern": "^ep_magma_expiry_frag_threshold$", "labels": ["bucket"]},
      "kv_ep_magma_expiry_purger_interval": {"group":"", "pattern": "^ep_magma_expiry_purger_interval$", "labels": ["bucket"]},
      "kv_ep_magma_flusher_thread_percentage": {"group":"", "pattern": "^ep_magma_flusher_thread_percentage$", "labels": ["bucket"]},
      "kv_ep_magma_fragmentation_percentage": {"group":"", "pattern": "^ep_magma_fragmentation_percentage$", "labels": ["bucket"]},
      "kv_ep_magma_heartbeat_interval": {"group":"", "pattern": "^ep_magma_heartbeat_interval$", "labels": ["bucket"]},
      "kv_ep_magma_initial_wal_buffer_size": {"group":"", "pattern": "^ep_magma_initial_wal_buffer_size$", "labels": ["bucket"]},
      "kv_ep_magma_max_checkpoints": {"group":"", "pattern": "^ep_magma_max_checkpoints$", "labels": ["bucket"]},
      "kv_ep_magma_max_default_storage_threads": {"group":"", "pattern": "^ep_magma_max_default_storage_threads$", "labels": ["bucket"]},
      "kv_ep_magma_max_level_0_ttl": {"group":"", "pattern": "^ep_magma_max_level_0_ttl$", "labels": ["bucket"]},
      "kv_ep_magma_max_recovery_bytes": {"group":"", "pattern": "^ep_magma_max_recovery_bytes$", "labels": ["bucket"]},
      "kv_ep_magma_max_write_cache": {"group":"", "pattern": "^ep_magma_max_write_cache$", "labels": ["bucket"]},
      "kv_ep_magma_mem_quota_ratio": {"group":"", "pattern": "^ep_magma_mem_quota_ratio$", "labels": ["bucket"]},
      "kv_ep_magma_value_separation_size": {"group":"", "pattern": "^ep_magma_value_separation_size$", "labels": ["bucket"]},
      "kv_ep_magma_write_cache_ratio": {"group":"", "pattern": "^ep_magma_write_cache_ratio$", "labels": ["bucket"]},
      "kv_ep_max_checkpoints": {"group":"", "pattern": "^ep_max_checkpoints$", "labels": ["bucket"]},
      "kv_ep_max_failover_entries": {"group":"", "pattern": "^ep_max_failover_entries$", "labels": ["bucket"]},
      "kv_ep_max_item_privileged_bytes": {"group":"", "pattern": "^ep_max_item_privileged_bytes$", "labels": ["bucket"]},
      "kv_ep_max_item_size": {"group":"", "pattern": "^ep_max_item_size$", "labels": ["bucket"]},
      "kv_ep_max_num_bgfetchers": {"group":"", "pattern": "^ep_max_num_bgfetchers$", "labels": ["bucket"]},
      "kv_ep_max_num_shards": {"group":"", "pattern": "^ep_max_num_shards$", "labels": ["bucket"]},
      "kv_ep_max_num_workers": {"group":"", "pattern": "^ep_max_num_workers$", "labels": ["bucket"]},
      "kv_ep_max_size": {"group":"", "pattern": "^ep_max_size$", "labels": ["bucket"]},
      "kv_ep_max_threads": {"group":"", "pattern": "^ep_max_threads$", "labels": ["bucket"]},
      "kv_ep_max_ttl": {"group":"", "pattern": "^ep_max_ttl$", "labels": ["bucket"]},
      "kv_ep_max_vbuckets": {"group":"", "pattern": "^ep_max_vbuckets$", "labels": ["bucket"]},
      "kv_ep_mem_high_wat": {"group":"", "pattern": "^ep_mem_high_wat$", "labels": ["bucket"]},
      "kv_ep_mem_low_wat": {"group":"", "pattern": "^ep_mem_low_wat$", "labels": ["bucket"]},
      "kv_ep_mem_used_merge_threshold_percent": {"group":"", "pattern": "^ep_mem_used_merge_threshold_percent$", "labels": ["bucket"]},
      "kv_ep_min_compression_ratio": {"group":"", "pattern": "^ep_min_compression_ratio$", "labels": ["bucket"]},
      "kv_ep_mutation_mem_threshold": {"group":"", "pattern": "^ep_mutation_mem_threshold$", "labels": ["bucket"]},
      "kv_ep_num_access_scanner_runs": {"group":"", "pattern": "^ep_num_access_scanner_runs$", "labels": ["bucket"]},
      "kv_ep_num_access_scanner_skips": {"group":"", "pattern": "^ep_num_access_scanner_skips$", "labels": ["bucket"]},
      "kv_ep_num_auxio_threads": {"group":"", "pattern": "^ep_num_auxio_threads$", "labels": ["bucket"]},
      "kv_ep_num_eject_failures": {"group":"", "pattern": "^ep_num_eject_failures$", "labels": ["bucket"]},
      "kv_ep_num_expiry_pager_runs": {"group":"", "pattern": "^ep_num_expiry_pager_runs$", "labels": ["bucket"]},
      "kv_ep_num_freq_decayer_runs": {"group":"", "pattern": "^ep_num_freq_decayer_runs$", "labels": ["bucket"]},
      "kv_ep_num_non_resident": {"group":"", "pattern": "^ep_num_non_resident$", "labels": ["bucket"]},
      "kv_ep_num_nonio_threads": {"group":"", "pattern": "^ep_num_nonio_threads$", "labels": ["bucket"]},
      "kv_ep_num_not_my_vbuckets": {"group":"", "pattern": "^ep_num_not_my_vbuckets$", "labels": ["bucket"]},
      "kv_ep_num_pager_runs": {"group":"", "pattern": "^ep_num_pager_runs$", "labels": ["bucket"]},
      "kv_ep_num_reader_threads": {"group":"", "pattern": "^ep_num_reader_threads$", "labels": ["bucket"]},
      "kv_ep_num_value_ejects": {"group":"", "pattern": "^ep_num_value_ejects$", "labels": ["bucket"]},
      "kv_ep_num_workers": {"group":"", "pattern": "^ep_num_workers$", "labels": ["bucket"]},
      "kv_ep_num_writer_threads": {"group":"", "pattern": "^ep_num_writer_threads$", "labels": ["bucket"]},
      "kv_ep_oom_errors": {"group":"", "pattern": "^ep_oom_errors$", "labels": ["bucket"]},
      "kv_ep_pager_active_vb_pcnt": {"group":"", "pattern": "^ep_pager_active_vb_pcnt$", "labels": ["bucket"]},
      "kv_ep_pager_sleep_time_ms": {"group":"", "pattern": "^ep_pager_sleep_time_ms$", "labels": ["bucket"]},
      "kv_ep_pending_compactions": {"group":"", "pattern": "^ep_pending_compactions$", "labels": ["bucket"]},
      "kv_ep_pending_ops": {"group":"", "pattern": "^ep_pending_ops$", "labels": ["bucket"]},
      "kv_ep_pending_ops_max": {"group":"", "pattern": "^ep_pending_ops_max$", "labels": ["bucket"]},
      "kv_ep_pending_ops_total": {"group":"", "pattern": "^ep_pending_ops_total$", "labels": ["bucket"]},
      "kv_ep_persist_vbstate_total": {"group":"", "pattern": "^ep_persist_vbstate_total$", "labels": ["bucket"]},
      "kv_ep_persistent_metadata_purge_age": {"group":"", "pattern": "^ep_persistent_metadata_purge_age$", "labels": ["bucket"]},
      "kv_ep_pitr_granularity": {"group":"", "pattern": "^ep_pitr_granularity$", "labels": ["bucket"]},
      "kv_ep_pitr_max_history_age": {"group":"", "pattern": "^ep_pitr_max_history_age$", "labels": ["bucket"]},
      "kv_ep_queue_size": {"group":"", "pattern": "^ep_queue_size$", "labels": ["bucket"]},
      "kv_ep_replication_throttle_cap_pcnt": {"group":"", "pattern": "^ep_replication_throttle_cap_pcnt$", "labels": ["bucket"]},
      "kv_ep_replication_throttle_threshold": {"group":"", "pattern": "^ep_replication_throttle_threshold$", "labels": ["bucket"]},
      "kv_ep_rocksdb_block_cache_high_pri_pool_ratio": {"group":"", "pattern": "^ep_rocksdb_block_cache_high_pri_pool_ratio$", "labels": ["bucket"]},
      "kv_ep_rocksdb_block_cache_ratio": {"group":"", "pattern": "^ep_rocksdb_block_cache_ratio$", "labels": ["bucket"]},
      "kv_ep_rocksdb_high_pri_background_threads": {"group":"", "pattern": "^ep_rocksdb_high_pri_background_threads$", "labels": ["bucket"]},
      "kv_ep_rocksdb_low_pri_background_threads": {"group":"", "pattern": "^ep_rocksdb_low_pri_background_threads$", "labels": ["bucket"]},
      "kv_ep_rocksdb_memtables_ratio": {"group":"", "pattern": "^ep_rocksdb_memtables_ratio$", "labels": ["bucket"]},
      "kv_ep_rocksdb_uc_max_size_amplification_percent": {"group":"", "pattern": "^ep_rocksdb_uc_max_size_amplification_percent$", "labels": ["bucket"]},
      "kv_ep_rocksdb_write_rate_limit": {"group":"", "pattern": "^ep_rocksdb_write_rate_limit$", "labels": ["bucket"]},
      "kv_ep_rollback_count": {"group":"", "pattern": "^ep_rollback_count$", "labels": ["bucket"]},
      "kv_ep_storedval_num": {"group":"", "pattern": "^ep_storedval_num$", "labels": ["bucket"]},
      "kv_ep_sync_writes_max_allowed_replicas": {"group":"", "pattern": "^ep_sync_writes_max_allowed_replicas$", "labels": ["bucket"]},
      "kv_ep_tmp_oom_errors": {"group":"", "pattern": "^ep_tmp_oom_errors$", "labels": ["bucket"]},
      "kv_ep_total_deduplicated": {"group":"", "pattern": "^ep_total_deduplicated$", "labels": ["bucket"]},
      "kv_ep_total_del_items": {"group":"", "pattern": "^ep_total_del_items$", "labels": ["bucket"]},
      "kv_ep_total_enqueued": {"group":"", "pattern": "^ep_total_enqueued$", "labels": ["bucket"]},
      "kv_ep_total_new_items": {"group":"", "pattern": "^ep_total_new_items$", "labels": ["bucket"]},
      "kv_ep_total_persisted": {"group":"", "pattern": "^ep_total_persisted$", "labels": ["bucket"]},
      "kv_ep_uncommitted_items": {"group":"", "pattern": "^ep_uncommitted_items$", "labels": ["bucket"]},
      "kv_ep_vb_total": {"group":"", "pattern": "^ep_vb_total$", "labels": ["bucket"]},
      "kv_ep_vbucket_del": {"group":"", "pattern": "^ep_vbucket_del$", "labels": ["bucket"]},
      "kv_ep_vbucket_del_fail": {"group":"", "pattern": "^ep_vbucket_del_fail$", "labels": ["bucket"]},
      "kv_ep_warmup_batch_size": {"group":"", "pattern": "^ep_warmup_batch_size$", "labels": ["bucket"]},
      "kv_ep_warmup_dups": {"group":"", "pattern": "^ep_warmup_dups$", "labels": ["bucket"]},
      "kv_ep_warmup_min_items_threshold": {"group":"", "pattern": "^ep_warmup_min_items_threshold$", "labels": ["bucket"]},
      "kv_ep_warmup_min_memory_threshold": {"group":"", "pattern": "^ep_warmup_min_memory_threshold$", "labels": ["bucket"]},
      "kv_ep_warmup_oom": {"group":"", "pattern": "^ep_warmup_oom$", "labels": ["bucket"]},
      "kv_iovused_high_watermark": {"group":"", "pattern": "^iovused_high_watermark$", "labels": ["bucket"]},
      "kv_lock_errors": {"group":"", "pattern": "^lock_errors$", "labels": ["bucket"]},
      "kv_msgused_high_watermark": {"group":"", "pattern": "^msgused_high_watermark$", "labels": ["bucket"]},
      "kv_rollback_item_count": {"group":"", "pattern": "^rollback_item_count$", "labels": ["bucket"]},
      "kv_total_resp_errors": {"group":"", "pattern": "^total_resp_errors$", "labels": ["bucket"]},
      "kv_ops": [
        {
          "group": "",
          "pattern": "^ep_num_ops_(?P<op>get_meta|set_meta|del_meta|set_ret_meta|del_ret_meta)$",
          "labels": [
            "bucket",
            "op"
          ],
          "type": "counter"
        },
        {
          "group": "",
          "pattern": "^ep_num_ops_get_meta_on_set_meta$",
          "labels": [
            "bucket"
          ],
          "constLabels": {
            "op": "get_meta_for_set_meta"
          },
          "type": "counter"
        },
        {
          "group": "",
          "pattern": "^cmd_(?P<op>flush|set)$",
          "labels": [
            "bucket",
            "op"
          ],
          "type": "counter"
        },
        {
          "group": "",
          "pattern": "^(?P<op>cas|get|delete|incr|decr)_(?P<result>hit|miss)e?s$",
          "labels": [
            "bucket",
            "op",
            "result"
          ],
          "type": "counter"
        }
      ],
      "kv_vb_perc_mem_resident_ratio": {
        "group": "",
        "pattern": "^vb_(?P<state>active|replica|dead|pending)_perc_mem_resident$",
        "labels": [
          "bucket",
          "state"
        ],
        "type": "gauge",
        "multiplier": 0.01
      }
    }
  },
  "gsi": {
    "index_avg_drain_rate": {
      "name": "avg_drain_rate"
    },
    "index_raw_data_size": {
      "name": "data_size"
    },
    "index_data_size": {
      "name": "data_size"
    },
    "index_items_count": {
      "name": "items_count"
    },
    "index_total_scan_duration": {
      "name": "total_scan_duration"
    },
    "index_memory_used_total": {
      "name": "memory_used",
      "global": true
    },
    "index_memory_quota": {
      "name": "memory_quota",
      "global": true
    },
    "index_avg_scan_latency": {
      "name": "avg_scan_latency"
    },
    "index_resident_percent": {
      "name": "resident_percent"
    },
    "index_data_size_on_disk": {
      "name": "disk_size"
    },
    "index_num_requests": {
      "name": "num_requests"
    },
    "index_num_docs_pending": {
      "name": "num_docs_pending"
    },
    "index_cache_hits": {
      "name": "cache_hits"
    },
    "index_cache_misses": {
      "name": "cache_misses"
    },
    "index_frag_percent": {
      "name": "frag_percent"
    },
    "index_num_docs_indexed": {
      "name": "num_docs_indexed"
    },
    "index_num_docs_queued": {
      "name": "num_docs_queued"
    },
    "index_num_rows_returned": {
      "name": "num_rows_returned"
    },
    "index_recs_in_mem": {
      "name": "recs_in_mem"
    },
    "index_recs_on_disk": {
      "name": "recs_on_disk"
    },
    "index_scan_bytes_read": {
      "name": "scan_bytes_read"
    }
  },
  "fts": {
    "fts_avg_grpc_queries_latency": {
      "name": "avg_grpc_queries_latency"
    },
    "fts_avg_internal_queries_latency": {
      "name": "avg_internal_queries_latency"
    },
    "fts_avg_queries_latency": {
      "name": "avg_queries_latency"
    },
    "fts_doc_count": {
      "name": "doc_count"
    },
    "fts_num_bytes_used_disk": {
      "name": "num_bytes_used_disk"
    },
    "fts_num_bytes_used_disk_by_root": {
      "name": "num_bytes_used_disk_by_root"
    },
    "fts_num_files_on_disk": {
      "name": "num_files_on_disk"
    },
    "fts_num_mutations_to_index": {
      "name": "num_mutations_to_index"
    },
    "fts_num_pindexes_actual": {
      "name": "num_pindexes_actual"
    },
    "fts_num_pindexes_target": {
      "name": "num_pindexes_target"
    },
    "fts_num_recs_to_persist": {
      "name": "num_recs_to_persist"
    },
    "fts_num_root_filesegments": {
      "name": "num_root_filesegments"
    },
    "fts_num_root_memorysegments": {
      "name": "num_root_memorysegments"
    },
    "fts_total_bytes_indexed": {
      "name": "total_bytes_indexed"
    },
    "fts_total_bytes_query_results": {
      "name": "total_bytes_query_results"
    },
    "fts_total_compaction_written_bytes": {
      "name": "total_compaction_written_bytes"
    },
    "fts_total_grpc_internal_queries": {
      "name": "total_grpc_internal_queries"
    },
    "fts_total_grpc_queries_error": {
      "name": "total_grpc_queries_error"
    },
    "fts_total_grpc_queries_slow": {
      "name": "total_grpc_queries_slow"
    },
    "fts_total_grpc_queries_timeout": {
      "name": "total_grpc_queries_timeout"
    },
    "fts_total_internal_queries": {
      "name": "total_internal_queries"
    },
    "fts_total_queries": {
      "name": "total_queries"
    },
    "fts_total_queries_error": {
      "name": "total_queries_error"
    },
    "fts_total_queries_slow": {
      "name": "total_queries_slow"
    },
    "fts_total_queries_timeout": {
      "name": "total_queries_timeout"
    },
    "fts_total_request_time": {
      "name": "total_request_time"
    },
    "fts_total_term_searchers": {
      "name": "total_term_searchers"
    },
    "fts_total_term_searchers_finished": {
      "name": "total_term_searchers_finished"
    },
    "fts_total_gc": {
      "name": "total_gc",
      "global": true
    },
    "fts_tot_remote_http": {
      "name": "tot_remote_http",
      "global": true
    },
    "fts_tot_remote_grpc": {
      "name": "tot_remote_grpc",
      "global": true
    },
    "fts_tot_remote_grpc_tls": {
      "name": "tot_remote_grpc_tls",
      "global": true
    },
    "fts_tot_grpc_listeners_opened": {
      "name": "tot_grpc_listeners_opened",
      "global": true
    },
    "fts_tot_grpc_listeners_closed": {
      "name": "tot_grpc_listeners_closed",
      "global": true
    },
    "fts_tot_https_limitlisteners_opened": {
      "name": "tot_https_limitlisteners_opened",
      "global": true
    },
    "fts_tot_https_limitlisteners_closed": {
      "name": "tot_https_limitlisteners_closed",
      "global": true
    },
    "fts_tot_http_limitlisteners_opened": {
      "name": "tot_http_limitlisteners_opened",
      "global": true
    },
    "fts_tot_http_limitlisteners_closed": {
      "name": "tot_http_limitlisteners_closed",
      "global": true
    },
    "fts_tot_batches_flushed_on_maxops": {
      "name": "tot_batches_flushed_on_maxops",
      "global": true
    },
    "fts_tot_queryreject_on_memquota": {
      "name": "tot_queryreject_on_memquota",
      "global": true
    },
    "fts_num_bytes_used_ram": {
      "name": "num_bytes_used_ram",
      "global": true
    },
    "fts_tot_bleve_dest_opened": {
      "name": "tot_bleve_dest_opened",
      "global": true
    },
    "fts_tot_bleve_dest_closed": {
      "name": "tot_bleve_dest_closed",
      "global": true
    },
    "fts_pct_cpu_gc": {
      "name": "pct_cpu_gc",
      "global": true
    },
    "fts_tot_remote_http2": {
      "name": "tot_remote_http2",
      "global": true
    },
    "fts_batch_bytes_added": {
      "name": "batch_bytes_added",
      "global": true
    },
    "fts_batch_bytes_removed": {
      "name": "batch_bytes_removed",
      "global": true
    },
    "fts_curr_batches_blocked_by_herder": {
      "name": "curr_batches_blocked_by_herder",
      "global": true
    },
    "fts_tot_grpc_queryreject_on_memquota": {
      "name": "tot_grpc_queryreject_on_memquota",
      "global": true
    },
    "fts_tot_batches_flushed_on_timer": {
      "name": "tot_batches_flushed_on_timer",
      "global": true
    }
  },
  "n1ql": {
    "n1ql_errors": {
      "name": "errors.count",
      "type": "counter"
    },
    "n1ql_updates": {
      "name": "updates.count",
      "type": "counter"
    },
    "n1ql_requests": {
      "name": "requests.count",
      "type": "counter"
    },
    "n1ql_result_size": {
      "name": "result_size.count",
      "type": "counter"
    },
    "n1ql_queued_requests": {
      "name": "queued_requests.count",
      "type": "counter"
    },
    "n1ql_scan_plus": {
      "name": "scan_plus.count",
      "type": "counter"
    },
    "n1ql_audit_actions_failed": {
      "name": "audit_actions_failed.count",
      "type": "counter"
    },
    "n1ql_cancelled": {
      "name": "cancelled.count",
      "type": "counter"
    },
    "n1ql_invalid_requests": {
      "name": "invalid_requests.count",
      "type": "counter"
    },
    "n1ql_selects": {
      "name": "selects.count",
      "type": "counter"
    },
    "n1ql_requests_250ms": {
      "name": "requests_250ms.count",
      "type": "counter"
    },
    "n1ql_request_time": {
      "name": "request_time.count",
      "type": "counter"
    },
    "n1ql_unbounded": {
      "name": "unbounded.count",
      "type": "counter"
    },
    "n1ql_result_count": {
      "name": "result_count.count",
      "type": "counter"
    },
    "n1ql_audit_requests_total": {
      "name": "audit_requests_total.count",
      "type": "counter"
    },
    "n1ql_requests_500ms": {
      "name": "requests_500ms.count",
      "type": "counter"
    },
    "n1ql_at_plus": {
      "name": "at_plus.count",
      "type": "counter"
    },
    "n1ql_service_time": {
      "name": "service_time.count",
      "type": "counter"
    },
    "n1ql_audit_requests_filtered": {
      "name": "audit_requests_filtered.count",
      "type": "counter"
    },
    "n1ql_audit_actions": {
      "name": "audit_actions.count",
      "type": "counter"
    },
    "n1ql_prepared": {
      "name": "prepared.count",
      "type": "counter"
    },
    "n1ql_requests_5000ms": {
      "name": "requests_5000ms.count",
      "type": "counter"
    },
    "n1ql_inserts": {
      "name": "inserts.count",
      "type": "counter"
    },
    "n1ql_index_scans": {
      "name": "index_scans.count",
      "type": "counter"
    },
    "n1ql_warnings": {
      "name": "warnings.count",
      "type": "counter"
    },
    "n1ql_mutations": {
      "name": "mutations.count",
      "type": "counter"
    },
    "n1ql_deletes": {
      "name": "deletes.count",
      "type": "counter"
    },
    "n1ql_active_requests": {
      "name": "active_requests.count",
      "type": "counter"
    },
    "n1ql_primary_scans": {
      "name": "primary_scans.count",
      "type": "counter"
    },
    "n1ql_requests_1000ms": {
      "name": "requests_1000ms.count",
      "type": "counter"
    }
  },
  "system": {
    "memFree": {
      "name": "sys_mem_free",
      "constLabels": {
        "category": "system"
      }
    },
    "memTotal": {
      "name": "sys_mem_total",
      "constLabels": {
        "category": "system"
      }
    },
    "memActualFree": {
      "name": "sys_mem_actual_free",
      "constLabels": {
        "category": "system"
      }
    },
    "memActualUsed": {
      "name": "sys_mem_actual_used",
      "constLabels": {
        "category": "system"
      }
    },
    "memUsedSys": {
      "name": "sys_mem_used_sys",
      "constLabels": {
        "category": "system"
      }
    },
    "cpuUtilization": {
      "name": "sys_cpu_utilization_rate",
      "constLabels": {
        "category": "system"
      }
    },
    "cpuUser": {
      "name": "sys_cpu_user_rate",
      "constLabels": {
        "category": "system"
      }
    },
    "cpuSys": {
      "name": "sys_cpu_sys_rate",
      "constLabels": {
        "category": "system"
      }
    },
    "cpuIrq": {
      "name": "sys_cpu_irq_rate",
      "constLabels": {
        "category": "system"
      }
    },
    "cpuStolen": {
      "name": "sys_cpu_stolen_rate",
      "constLabels": {
        "category": "system"
      }
    },
    "cpuCoresAvailable": {
      "name": "sys_cpu_cores_available",
      "constLabels": {
        "category": "system"
      }
    }
  },
  "eventing": {
    "eventing_agg_queue_memory": {
      "labels": ["functionName"],
      "expression": ".[] | [.execution_stats.agg_queue_memory, .function_name]"
    },
    "eventing_agg_queue_size": {
      "labels": ["functionName"],
      "expression": ".[] | [.execution_stats.agg_queue_size, .function_name]"
    },
    "eventing_bkt_ops_cas_mismatch_count": {
      "labels": ["functionName"],
      "expression": ".[] | [.failure_stats.bkt_ops_cas_mismatch_count, .function_name]"
    },
    "eventing_bucket_op_exception_count": {
      "labels": ["functionName"],
      "expression": ".[] | [.failure_stats.bucket_op_exception_count, .function_name]"
    },
    "eventing_checkpoint_failure_count": {
      "labels": ["functionName"],
      "expression": ".[] | [.failure_stats.checkpoint_failure_count, .function_name]"
    },
    "eventing_dcp_backlog": {
      "labels": ["functionName"],
      "expression": ".[] | [.events_remaining.dcp_backlog, .function_name]"
    },
    "eventing_dcp_delete_msg_counter": {
      "labels": ["functionName"],
      "expression": ".[] | [.execution_stats.dcp_delete_msg_counter, .function_name]"
    },
    "eventing_dcp_mutations_msg_counter": {
      "labels": ["functionName"],
      "expression": ".[] | [.execution_stats.dcp_mutation_msg_counter, .function_name]"
    },
    "eventing_n1ql_op_exception_count": {
      "labels": ["functionName"],
      "expression": ".[] | [.failure_stats.n1ql_op_exception_count, .function_name]"
    },
    "eventing_on_delete_failure": {
      "labels": ["functionName"],
      "expression": ".[] | [.execution_stats.on_delete_failure, .function_name]"
    },
    "eventing_on_delete_success": {
      "labels": ["functionName"],
      "expression": ".[] | [.execution_stats.on_delete_success, .function_name]"
    },
    "eventing_on_update_failure": {
      "labels": ["functionName"],
      "expression": ".[] | [.execution_stats.on_update_failure, .function_name]"
    },
    "eventing_on_update_success": {
      "labels": ["functionName"],
      "expression": ".[] | [.execution_stats.on_update_success, .function_name]"
    },
    "eventing_timeout_count": {
      "labels": ["functionName"],
      "expression": ".[] | [.failure_stats.timeout_count, .function_name]"
    },
    "eventing_timer_callback_missing_counter": {
      "labels": ["functionName"],
      "expression": ".[] | [.failure_stats.timer_callback_missing_counter, .function_name]"
    },
    "eventing_timer_cancel_counter": {
      "labels": ["functionName"],
      "expression": ".[] | [.execution_stats.timer_cancel_counter, .function_name]"
    },
    "eventing_timer_context_size_exception_counter": {
      "labels": ["functionName"],
      "expression": ".[] | [.failure_stats.timer_context_size_exceeded_counter, .function_name]"
    },
    "eventing_timer_create_counter": {
      "labels": ["functionName"],
      "expression": ".[] | [.execution_stats.timer_create_counter, .function_name]"
    },
    "eventing_timer_msg_counter": {
      "labels": ["functionName"],
      "expression": ".[] | [.execution_stats.timer_msg_counter, .function_name]"
    }
  },
  "xdcr": {
    "xdcr_changes_left_total": {
      "name": "changes_left",
      "type": "counter",
      "help": "Given the VBs of this node, the number of seqnos that need to be processed (either replicated or handled) before catching up to the high sequence numbers for the VBs."
    },
    "xdcr_add_docs_written_total": {
      "name": "add_docs_written",
      "type": "counter",
      "help": "Number of adds successfully written to target, meaning that target does not have the identical doc by name."
    },
    "xdcr_expiry_failed_cr_source_total": {
      "name": "expiry_failed_cr_source",
      "type": "counter",
      "help": "Subset of the number of documents that failed source-side conflict resolution that specifically had expiry flag set."
    },
    "xdcr_deletion_filtered_total": {
      "name": "deletion_filtered",
      "type": "counter",
      "help": "Number of documents filtered that was of a DCP deletion."
    },
    "xdcr_docs_written_total": {
      "name": "docs_written",
      "type": "counter",
      "help": "Number of docs written/sent to target cluster."
    },
    "xdcr_deletion_docs_written_total": {
      "name": "deletion_docs_written",
      "type": "counter",
      "help": "Number of deletion written to target."
    },
    "xdcr_add_docs_cas_changed_total": {
      "name": "add_docs_cas_changed",
      "type": "counter",
      "help": "Number of add failed because target cas changed."
    },
    "xdcr_deletion_failed_cr_source_total": {
      "name": "deletion_failed_cr_source",
      "type": "counter",
      "help": "Subset of the number of documents that failed source-side conflict resolution that were delete operations."
    },
    "xdcr_time_committing_seconds": {
      "name": "time_committing",
      "type": "gauge",
      "help": "The rolling average amount of time it takes for a checkpoint operation to complete."
    },
    "xdcr_docs_checked_total": {
      "name": "docs_checked",
      "type": "gauge",
      "help": "Across VBs for this node, the sum of all seqnos that have been considered to be checkpointed."
    },
    "xdcr_data_replicated_bytes": {
      "name": "data_replicated",
      "type": "counter",
      "help": "Amount of data replicated for a replication."
    },
    "xdcr_dcp_dispatch_time_seconds": {
      "name": "dcp_dispatch_time",
      "type": "gauge",
      "help": "The rolling average amount of time it takes for a document to be received by XDCR from DCP, to the time it is queued up in the out nozzle ready to be sent."
    },
    "xdcr_set_docs_cas_changed_total": {
      "name": "set_docs_cas_changed",
      "type": "counter",
      "help": "Number of set failed because target cas changed."
    },
    "xdcr_docs_received_from_dcp": {
      "name": "docs_received_from_dcp",
      "type": "counter",
      "help": "The number of set operations received from DCP."
    },
    "xdcr_set_target_docs_skipped_total": {
      "name": "set_target_docs_skipped",
      "type": "counter",
      "help": "Subset of the number of documents that originated from the target that were set operations."
    },
    "xdcr_throughput_throttle_latency_seconds": {
      "name": "throughput_throttle_latency",
      "type": "counter",
      "help": "The rolling average of the latency time introduced due to throughput throttler."
    },
    "xdcr_expiry_docs_merge_failed_total": {
      "name": "expiry_docs_merge_failed",
      "type": "counter",
      "help": "Number of conflicting expiry docs failed to merge."
    },
    "xdcr_set_received_from_dcp_total": {
      "name": "set_received_from_dcp",
      "type": "counter",
      "help": "The subset of documents received from DCP that is a mutation (set action)."
    },
    "xdcr_expiry_filtered_total": {
      "name": "expiry_filtered",
      "type": "counter",
      "help": "Number of documents filtered that had expiry flag set."
    },
    "xdcr_docs_merged_total": {
      "name": "docs_merged",
      "type": "counter",
      "help": "Number of conflicting docs successfully merged."
    },
    "xdcr_expiry_target_docs_skipped_total": {
      "name": "expiry_target_docs_skipped",
      "type": "counter",
      "help": "Subset of the number of documents that originated from the target that specifically had expiry flag set."
    },
    "xdcr_resp_wait_time_seconds": {
      "name": "resp_wait_time",
      "type": "gauge",
      "help": "The rolling average amount of time it takes from when a MemcachedRequest is created to be ready to route to an outnozzle to the time that the response has been heard back from the target node after a successful write."
    },
    "xdcr_docs_failed_cr_source_total": {
      "name": "docs_failed_cr_source",
      "type": "counter",
      "help": "Number of documents that was not replicated to the target due to conflict resolution evaluated on the source cluster."
    },
    "xdcr_expiry_merge_cas_changed_total": {
      "name": "expiry_merge_cas_changed",
      "type": "counter",
      "help": "Number of expiry merges failed because source cas changed."
    },
    "xdcr_docs_rep_queue_total": {
      "name": "docs_rep_queue",
      "type": "gauge",
      "help": "Number of documents being queued to be sent in an out nozzle."
    },
    "xdcr_docs_filtered_total": {
      "name": "docs_filtered",
      "type": "gauge",
      "help": "Total number of documents filtered and not replicated due to any type of filtering."
    },
    "xdcr_set_docs_written_total": {
      "name": "set_docs_written",
      "type": "counter",
      "help": "Number of sets written to target."
    },
    "xdcr_deletion_docs_cas_changed_total": {
      "name": "deletion_docs_cas_changed",
      "type": "counter",
      "help": "Number of deletion failed because target cas changed."
    },
    "xdcr_throttle_latency_seconds": {
      "name": "throttle_latency",
      "type": "gauge",
      "help": "The rolling average of the latency time introduced due to bandwith throttler."
    },
    "xdcr_expiry_received_from_dcp_total": {
      "name": "expiry_received_from_dcp",
      "type": "counter",
      "help": "The subset of documents received from DCP that either 1.) Is a DCP expiration or 2) Is a document that contains an expiration time."
    },
    "xdcr_wtavg_meta_latency_seconds": {
      "name": "wtavg_meta_latency",
      "type": "gauge",
      "help": "The rolling average amount of time it takes once a getMeta command is composed to be sent to the time the request is handled once the target node has responded."
    },
    "xdcr_data_merged_bytes": {
      "name": "data_merged",
      "type": "counter",
      "help": "Amount of data merged for a replication."
    },
    "xdcr_wtavg_merge_latency_seconds": {
      "name": "wtavg_merge_latency",
      "type": "gauge",
      "help": "The rolling average amount of time it takes from routing, conflict detection and resolution, to receive the acknowledgement of merge."
    },
    "xdcr_deletion_target_docs_skipped_total": {
      "name": "deletion_target_docs_skipped",
      "type": "counter",
      "help": "Subset of the number of documents that originated from the target that were delete operations."
    },
    "xdcr_set_filtered_total": {
      "name": "set_filtered",
      "type": "counter",
      "help": "Number of documents filtered that was of a DCP mutation."
    },
    "xdcr_docs_opt_repd_total": {
      "name": "docs_opt_repd",
      "type": "counter",
      "help": "Number of documents optimistically replicated to the target."
    },
    "xdcr_wtavg_docs_latency_seconds": {
      "name": "wtavg_docs_latency",
      "type": "gauge",
      "help": "The rolling average amount of time it takes for the source cluster to receive the acknowledgement of a SET_WITH_META response after the Memcached request has been composed to be processed by the XDCR outnozzle."
    },
    "xdcr_docs_cloned_total": {
      "name": "docs_cloned",
      "type": "counter",
      "help": "The number of times a source mutation is cloned to be written to different target namespace."
    },
    "xdcr_expiry_docs_merged_total": {
      "name": "expiry_docs_merged",
      "type": "counter",
      "help": "Number of expiry merged and written to source."
    },
    "xdcr_set_failed_cr_source_total": {
      "name": "set_failed_cr_source",
      "type": "counter",
      "help": "Subset of the number of documents that failed source-side conflict resolution that were set operations."
    },
    "xdcr_num_failedckpts_total": {
      "name": "num_failedckpts",
      "type": "counter",
      "help": "The number of times checkpoint operation has encountered an error since this XDCR process instance is made aware of this replication."
    },
    "xdcr_size_rep_queue_bytes": {
      "name": "size_rep_queue",
      "type": "gauge",
      "help": "Amount of data being queued to be sent in an out nozzle."
    },
    "xdcr_deletion_received_from_dcp_total": {
      "name": "deletion_received_from_dcp",
      "type": "counter",
      "help": "The subset of documents received from DCP that is a Delete action."
    },
    "xdcr_expiry_stripped_total": {
      "name": "expiry_stripped",
      "type": "counter",
      "help": "Number of documents replicated that had its TTL changed to 0 before writing to target (source is unmodified)."
    },
    "xdcr_num_checkpoints_total": {
      "name": "num_checkpoints",
      "type": "counter",
      "help": "The number of times checkpoint operation has completed successfully since this XDCR process instance is made aware of this replication."
    },
    "xdcr_docs_processed_total": {
      "name": "docs_processed",
      "type": "gauge",
      "help": "Number of docs processed for a replication."
    },
    "xdcr_docs_unable_to_filter_total": {
      "name": "docs_unable_to_filter",
      "type": "gauge",
      "help": "Number of documents that couldn't be filtered due to inability to parse the document through Advanced Filtering engine and were not replicated."
    },
    "xdcr_wtavg_get_doc_latency_seconds": {
      "name": "wtavg_get_doc_latency",
      "type": "gauge",
      "help": "The rolling average amount of time it takes once a get document command is composed to be sent to the time the request is handled once the target node has responded."
    },
    "xdcr_target_docs_skipped_total": {
      "name": "target_docs_skipped",
      "type": "counter",
      "help": "Number of documents that was not replicated to the target because they originated from the target."
    },
    "xdcr_expiry_docs_written_total": {
      "name": "expiry_docs_written",
      "type": "counter",
      "help": "Number of expiry written to target."
    },
    "xdcr_datapool_failed_gets_total": {
      "name": "datapool_failed_gets",
      "type": "counter",
      "help": "The total number of failed GET() operation on a reusable datapool within XDCR for the purpose of avoiding garbage generation."
    },
    "xdcr_dcp_datach_length_total": {
      "name": "dcp_datach_length",
      "type": "gauge",
      "help": "The number of items sent by KV DCP waiting for XDCR DCP nozzle to ingest and process."
    },
    "xdcr_docs_merge_cas_changed_total": {
      "name": "docs_merge_cas_changed",
      "type": "counter",
      "help": "Number of merges failed because source cas changed."
    }
  }
}